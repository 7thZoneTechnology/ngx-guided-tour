{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".jumbotron img {\\n    vertical-align: bottom;\\n    margin-right: 10px;\\n}\\n\\n.center-content {\\n    width: 100%;\\n    max-width: 800px;\\n    margin: auto;\\n    padding: 0 15px;\\n    display: flex;\\n    flex-direction: row;\\n    align-items: center;\\n    justify-content: center;\\n    flex-wrap: wrap;\\n    text-align: center;\\n}\\n\\n.center-content img {\\n    margin: 30px;\\n    cursor: pointer;\\n}\\n\\np {\\n    margin: 0;\\n}\\n\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"height: 120vh;\\\">\\n    <div class=\\\"jumbotron text-center\\\">\\n        <h1>\\n            <span class=\\\"demo-title\\\">ngx-guided-tour Demo</span>\\n        </h1>\\n    </div>\\n\\n    <div height=\\\"400\\\" class=\\\"center-content\\\">\\n        <div>\\n            Guided tour is a great way to introduce your users to new features or remind them how to use exisiting features. Hover your mouse over the orb above to start the tour.\\n            <br/>\\n            <br/>\\n            Orbs are optional, If not set or set to false the tour will just start.\\n        </div>\\n    </div>\\n\\n    <br/>\\n    <br/>\\n\\n    <div class=\\\"center-content\\\">\\n        <button (click)=\\\"restartTour()\\\">\\n            Restart Tour\\n        </button>\\n    </div>\\n\\n    <br/>\\n    <br/>\\n\\n    <div class=\\\"center-content\\\">\\n        <span class=\\\"tour-middle-content\\\">\\n            Click restart to start the tour again.\\n            <br/>\\n            <br/>\\n            There are multiple features to correctly position and caclulate scrolling on your tours.\\n        </span>\\n    </div>\\n\\n    <br/><br/>\\n    <div class=\\\"center-content\\\">\\n        \\n    </div>\\n\\n    <br/><br/>\\n</div>\\n\\n<div class=\\\"center-content\\\">\\n    <span class=\\\"tour-scroll\\\">\\n        This content is on the bottom of the page so that the tour is forced to scroll to it.\\n    </span>\\n</div>\\n\\n<ngx-guided-tour></ngx-guided-tour>\"","import {GuidedTourService, GuidedTour, Orientation} from 'ngx-guided-tour';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n    title = 'app';\n\n    public dashboardTour: GuidedTour = {\n        tourId: 'purchases-tour',\n        useOrb: true,\n        steps: [\n            {\n                title: 'Welcome to the Guided Tour Demo',\n                selector: '.demo-title',\n                content: 'Step 1',\n                orientation: Orientation.Bottom\n            },\n            {\n                title: 'General page step',\n                content: 'We have the concept of general page steps so that a you can introuce a user to a page or non specific instructions',\n            },\n            {\n                title: 'Positioning',\n                selector: '.tour-middle-content',\n                content: 'Step position can be set so that steps are always in view. This step is on the left.',\n                orientation: Orientation.Left\n            },\n            {\n                title: 'Positioning 2',\n                selector: '.tour-middle-content',\n                content: 'This step is on the right.',\n                orientation: Orientation.Right\n            },\n            {\n                title: 'Scroll to content',\n                selector: '.tour-scroll',\n                content: 'Automatically scroll to elements so they are in view',\n                orientation: Orientation.Top\n            }\n        ]\n    };\n\n    constructor(\n        private guidedTourService: GuidedTourService\n    ) {\n\n        setTimeout(() => {\n            this.guidedTourService.startTour(this.dashboardTour);\n        }, 1000);\n    }\n\n    public restartTour(): void {\n        this.guidedTourService.startTour(this.dashboardTour);\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { GuidedTourModule } from 'ngx-guided-tour';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    GuidedTourModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}